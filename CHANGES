FIRST RELEASE v1.0 | <2 FEB 2024>

    ******************** Removals: ********************
    1. file host/dnp3.cpp
        deleted OpenPLC_v3 file webserver/core/dnp3.cpp

    2. file host/dnp3.cfg 
        deleted OpenPLC_v3 file webserver/core/dnp3.cfg

    3. file host/modbus_master.cpp
        deleted OpenPLC_v3 file webserver/core/modbus_master.cpp

    ******************** Modifications: ********************
    1. file host/interactive_server.cpp
        commented out lines 72-75, 231, 285, 291, 302, 320, 326, 337, 502, 503 from OpenPLC_v3 webserver/core/interactive_server.cpp to disable dnp3 features

    ******************** Additions: ********************
    1. file my_modbus.c
        contains functions to query modbus slave devices from modbus_master.cpp:
            uint32_t querySlaveRead(void): void *querySlaveDevices(void *arg)
            uint32_t querySlaveWrite(void): void *querySlaveDevices(void *arg)
            void updateBuffersIn_MB(): void updateBuffersIn_MB()
            void updateBuffersOut_MB(): void updateBuffersOut_MB()

        contains functions of simplified Modbus/TLS client implementation: 
            TEE_Result modbus_close(modbus_dev_t* slave)
            TEE_Result modbus_connect(modbus_dev_t *slave)
            uint8_t compute_meta_len_after_function(int function)
            uint32_t compute_response_length_from_request(uint8_t *req)
            int check_confirmation(modbus_dev_t *slave, uint8_t *req, uint8_t *rsp, int rsp_length)
            static int modbus_read_input_bits(modbus_dev_t* slave, uint8_t* tempBuff)
            static int read_registers(modbus_dev_t *slave, int function, int addr, int nb, uint16_t *dest)
            static int modbus_read_registers(modbus_dev_t* slave, uint16_t* dest)
            int modbus_write_coils(modbus_dev_t* slave, uint8_t* src)
            static int modbus_write_registers(modbus_dev_t* slave, uint16_t* src)
            static int modbus_read_input_registers(modbus_dev_t* slave, uint16_t* dest)
            static int read_registers(modbus_dev_t *slave, int function, int addr, int nb, uint16_t *dest)
            int32_t modbus_send(modbus_dev_t* slave, uint8_t *msg, uint32_t msg_len)
            int modbus_receive_msg(modbus_dev_t *slave, uint8_t *msg)
            int32_t modbus_recv(modbus_dev_t* slave, uint8_t *msg, uint32_t msg_len)
            int modbus_send_msg_pre(uint8_t *req, int req_length)
            void modbus_build_tcpreq_hdr(modbus_dev_t* slave, int function, int addr, int nb, uint8_t *req)

        contains hook functions of wolfssl sending & receiving:
            int my_IORecv(WOLFSSL* ssl, char* buff, int sz, void* ctx)
            int my_IOSend(WOLFSSL* ssl, char* buff, int sz, void* ctx)

        contains slave device construction and initialization functions:
            modbus_dev_t* make_slave(char *addr, uint16_t port, uint8_t slave_id, TEE_Result* res)
            TEE_Result modbus_init(int slave_num)
            static void set_slave_dis_regs(modbus_dev_t* slave, uint16_t start_addr, uint16_t num_regs)
            static void set_slave_coils(modbus_dev_t* slave, uint16_t start_addr, uint16_t num_regs)
            static void set_slave_input_regs(modbus_dev_t* slave, uint16_t start_addr, uint16_t num_regs)
            static void set_slave_holding_regs(modbus_dev_t* slave, uint16_t start_addr, uint16_t num_regs)
            static void set_slave_holding_read_regs(modbus_dev_t* slave, uint16_t start_addr, uint16_t num_regs)

        contains timestamp update functions:
            static uint32_t pctcnt2us(uint64_t cnt)
            void updateTimeStampInSHM(uint16_t core_logic_time)

        contains interfaces for scan-cycle ta to control slave devices:
            TEE_Result modbus_close_all(void)
            TEE_Result modbus_connect_all(void)

        contains functions to allocated memory of modbus & wolfssl resources:
            void modbus_clear(void)